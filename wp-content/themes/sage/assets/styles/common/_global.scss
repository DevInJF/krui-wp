.cat-icon {
	max-width: 50px;
	padding: 0 5px;
}

.archive .cat-icon {
	max-width: 30px;
}

.news-top-holder {
	background: #eee;
}

.news-top {
	margin-bottom: 20px;
	background: #eee;

	//padding-top: 10px;
	//padding-bottom: 10px;

	img {
		filter: gray;

		/* IE6-9 */
		filter: grayscale(1);

		/* Microsoft Edge and Firefox 35+ */
		-webkit-filter: grayscale(1);

		/* Google Chrome, Safari 6+ & Opera 15+ */
	}

	h2 {
		font-size: 16px;
		margin-top: 10px;
	}

	.post-meta-container, .entry-summary {
		display: none;
	}

	.cat-icon {
		max-width: 30px;
	}
}

.feed-content-container {}

.feed-content {
	background-size: cover;

	//background: #333;

	a {
		//color: white;

	}
}

@mixin clearfix {
	&:before, &:after {
		content: " ";
		display: table;
	}

	&:after {
		clear: both;
	}
}

$white: #FFFFFF !default;
$ghost: #FAFAFA !default;
$snow: #F9F9F9 !default;
$vapor: #F6F6F6 !default;
$white-smoke: #F5F5F5 !default;
$silver: #EFEFEF !default;
$smoke: #EEEEEE !default;
$gainsboro: #DDDDDD !default;
$iron: #CCCCCC !default;
$base: #AAAAAA !default;
$aluminum: #999999 !default;
$jumbo: #888888 !default;
$monsoon: #777777 !default;
$steel: #666666 !default;
$charcoal: #555555 !default;
$tuatara: #444444 !default;
$oil: #333333 !default;
$jet: #222222 !default;
$black: #000000 !default;

// We use these as default colors throughout
$primary-color: #008CBA !default;

// bondi-blue
$secondary-color: #e7e7e7 !default;

// white-lilac
$alert-color: #f04124 !default;

// cinnabar
$success-color: #43AC6A !default;

// sea-green
$warning-color: #f08a24 !default;

// carrot
$info-color: #a0d3e8 !default;

// cornflower

// We use these to define default font stacks
$font-family-sans-serif: "Helvetica Neue", Helvetica, Roboto, Arial, sans-serif !default;
$font-family-serif: Georgia, Cambria, "Times New Roman", Times, serif !default;
$font-family-monospace: Consolas, "Liberation Mono", Courier, monospace !default;

// We use these to define default font weights
$font-weight-normal: normal !default;
$font-weight-bold: bold !default;

// We use these to control various global styles
$body-bg: #fff !default;
$body-font-color: #222 !default;
$body-font-family: $font-family-sans-serif !default;
$body-font-weight: $font-weight-normal !default;
$body-font-style: normal !default;

// We use this to control font-smoothing
$font-smoothing: antialiased !default;

// We use these to control text direction settings
$text-direction: ltr !default;
$default-float: left !default;
$opposite-direction: right !default;

@if $text-direction == ltr {
	$default-float: left;
	$opposite-direction: right;
}
@else {
	$default-float: right;
	$opposite-direction: left;
}

// We use these to make sure border radius matches unless we want it different.
$global-radius: 3px !default;
$global-rounded: 1000px !default;

// We use these to control inset shadow shiny edges and depressions.
$shiny-edge-size: 0 1px 0 !default;
$shiny-edge-color: rgba(#fff, 0.5) !default;
$shiny-edge-active-color: rgba(#000, 0.2) !default;

// We use this to control whether or not CSS classes come through in the gem files.
$include-html-classes: true !default;
$include-print-styles: true !default;
$include-html-global-classes: $include-html-classes !default;

$column-gutter: rem-calc(30) !default;

// Media Query Ranges
$small-range: 0, 40em !default;
$medium-range: 40.063em, 64em !default;
$large-range: 64.063em, 90em !default;
$xlarge-range: 90.063em, 120em !default;
$xxlarge-range: 120.063em, 99999999em !default;

$screen: "only screen" !default;

$landscape: "#{$screen} and (orientation: landscape)" !default;
$portrait: "#{$screen} and (orientation: portrait)" !default;

$small-up: $screen !default;
$small-only: "#{$screen} and (max-width: #{upper-bound($small-range)})" !default;

$medium-up: "#{$screen} and (min-width:#{lower-bound($medium-range)})" !default;
$medium-only: "#{$screen} and (min-width:#{lower-bound($medium-range)}) and (max-width:#{upper-bound($medium-range)})" !default;

$large-up: "#{$screen} and (min-width:#{lower-bound($large-range)})" !default;
$large-only: "#{$screen} and (min-width:#{lower-bound($large-range)}) and (max-width:#{upper-bound($large-range)})" !default;

$xlarge-up: "#{$screen} and (min-width:#{lower-bound($xlarge-range)})" !default;
$xlarge-only: "#{$screen} and (min-width:#{lower-bound($xlarge-range)}) and (max-width:#{upper-bound($xlarge-range)})" !default;

$xxlarge-up: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)})" !default;
$xxlarge-only: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)}) and (max-width:#{upper-bound($xxlarge-range)})" !default;

// Legacy
$small: $medium-up;
$medium: $medium-up;
$large: $large-up;

//We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet
$cursor-auto-value: auto !default;
$cursor-crosshair-value: crosshair !default;
$cursor-default-value: default !default;
$cursor-pointer-value: pointer !default;
$cursor-help-value: help !default;
$cursor-text-value: text !default;